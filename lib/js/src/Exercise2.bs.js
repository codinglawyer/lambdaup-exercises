// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Utils$Ex1 = require("./Utils.bs.js");
var Exercise1$Ex1 = require("./Exercise1.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

console.log("\n~~");

function checkKnowledge(knowledge, lang) {
  switch (knowledge) {
    case 0 : 
        if (lang >= 2) {
          return "nobody";
        } else {
          return "Junior +";
        }
    case 1 : 
        if (lang >= 2) {
          return "Not matched";
        } else {
          return "Medium knowledge";
        }
    case 2 : 
        if (lang !== 0) {
          return "Wizard";
        } else {
          return "Wizard OCaml";
        }
    
  }
}

var BelowZero = Caml_exceptions.create("Exercise2-Ex1.BelowZero");

function factorial(num) {
  var _i = 1;
  var _acc = 1;
  while(true) {
    var acc = _acc;
    var i = _i;
    if (i > num) {
      return acc;
    } else {
      _acc = Exercise1$Ex1.multiplication(acc, i);
      _i = Utils$Ex1.sum(i, 1);
      continue ;
    }
  };
}

console.log(factorial(5));

var yourAnswer = /* Yes */0;

var conferenceName = /* Name */Block.__(0, ["LambdaUp"]);

var conferenceDuration = /* Duration */Block.__(1, [20]);

var venue = /* tuple */[
  10,
  40,
  2.2
];

var tropical = /* tuple */[
  23.6,
  18.7,
  1
];

var youKnowReasonML = /* Some */["Yes, I know!"];

exports.yourAnswer = yourAnswer;
exports.conferenceName = conferenceName;
exports.conferenceDuration = conferenceDuration;
exports.venue = venue;
exports.tropical = tropical;
exports.youKnowReasonML = youKnowReasonML;
exports.checkKnowledge = checkKnowledge;
exports.BelowZero = BelowZero;
exports.factorial = factorial;
/*  Not a pure module */
